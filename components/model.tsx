/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as React from "react";
import { useGLTF } from "@react-three/drei";
import type { GLTF } from "three/examples/jsm/loaders/GLTFLoader";
import { useFrame } from "@react-three/fiber";
import { MeshNormalMaterial } from "three";

type GLTFResult = GLTF & {
  nodes: {
    [name: string]: THREE.Mesh;
  };
  materials: {
    [name: string]: THREE.Material;
  };
};

export function Model() {
  const myMesh = React.useRef<THREE.Mesh>(null!);
  useFrame(({ clock }) => {
    const time = clock.getElapsedTime();
    const speed = 0.5;
    const rot = time * speed;
    // const x = Math.sin(rot) * 0.7;
    const y = Math.cos(rot) * 0.7;
    myMesh.current.rotation.set(0, y, 0);
  });
  const { nodes } = useGLTF("/shuma-gorath7.stl") as GLTFResult;
  return (
    <group scale={10} position={[0, -3, 0]} dispose={null}>
      <mesh
        ref={myMesh}
        castShadow
        receiveShadow
        geometry={nodes.Asset3DLoadersceneRoot.geometry}
        material={nodes.Asset3DLoadersceneRoot.material}
      />
    </group>
  );
}

useGLTF.preload("/shuma-gorath7.stl");
